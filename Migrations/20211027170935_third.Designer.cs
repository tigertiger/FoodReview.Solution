// <auto-generated />
using FoodReview.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FoodReview.Solution.Migrations
{
    [DbContext(typeof(FoodReviewContext))]
    [Migration("20211027170935_third")]
    partial class third
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("FoodReview.Models.Food", b =>
                {
                    b.Property<int>("FoodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("FoodGroup")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ImageLocation")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ImageName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Review")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("FoodId");

                    b.ToTable("Foods");

                    b.HasData(
                        new
                        {
                            FoodId = 1,
                            FoodGroup = "Dairy",
                            ImageLocation = "https://www.refinery29.com/images/10001972.jpg?crop=40%3A21",
                            ImageName = "glass of milk",
                            Name = "Milk",
                            Review = "It's good in coffee."
                        },
                        new
                        {
                            FoodId = 2,
                            FoodGroup = "Meat",
                            ImageLocation = "https://d1nqx6es26drid.cloudfront.net/app/uploads/2015/04/04043817/product-hamburger.png",
                            ImageName = "hamburger",
                            Name = "Hamburger",
                            Review = "This is a good standard food, when you're hungry. It'll fill you up."
                        },
                        new
                        {
                            FoodId = 3,
                            FoodGroup = "Dinner",
                            ImageLocation = "https://www.istockphoto.com/photo/cheesy-pepperoni-pizza-gm938742222-256696208",
                            ImageName = "Slice of Pizza",
                            Name = "Pizza",
                            Review = "This food needs no review because it's the only food that actually matters. Grab a slice, kick back, and relish in the fact that you just took a bite out of heaven."
                        },
                        new
                        {
                            FoodId = 4,
                            FoodGroup = "Vegetables",
                            ImageLocation = "https://images.indianexpress.com/2019/12/Peas_759.jpg",
                            ImageName = "Peas",
                            Name = "Peas",
                            Review = "These little nightmare balls serve no purpose other than to ruin the rest of your meal by tainting your palate."
                        },
                        new
                        {
                            FoodId = 5,
                            FoodGroup = "Vegetable",
                            ImageLocation = "https://www.freshpoint.com/wp-content/uploads/commodity-carrot.jpg",
                            ImageName = "carrots",
                            Name = "Carrot",
                            Review = "Crunchy. Orange. Snowman noses. What more do you want?"
                        },
                        new
                        {
                            FoodId = 6,
                            FoodGroup = "Breakfast",
                            ImageLocation = "https://4eojie3jgd8h1h57zz1bwc39-wpengine.netdna-ssl.com/wp-content/uploads/2018/12/PurelyOs_Main_1028.png",
                            ImageName = "breakfast cereal",
                            Name = "Breakfast Cereal",
                            Review = "Depends."
                        });
                });

            modelBuilder.Entity("FoodReview.Models.FoodRating", b =>
                {
                    b.Property<int>("FoodRatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("FoodId")
                        .HasColumnType("int");

                    b.Property<int>("RatingId")
                        .HasColumnType("int");

                    b.HasKey("FoodRatingId");

                    b.HasIndex("FoodId");

                    b.HasIndex("RatingId");

                    b.ToTable("FoodRating");

                    b.HasData(
                        new
                        {
                            FoodRatingId = 1,
                            FoodId = 1,
                            RatingId = 1
                        },
                        new
                        {
                            FoodRatingId = 2,
                            FoodId = 2,
                            RatingId = 2
                        },
                        new
                        {
                            FoodRatingId = 3,
                            FoodId = 3,
                            RatingId = 3
                        },
                        new
                        {
                            FoodRatingId = 4,
                            FoodId = 4,
                            RatingId = 4
                        },
                        new
                        {
                            FoodRatingId = 5,
                            FoodId = 5,
                            RatingId = 5
                        },
                        new
                        {
                            FoodRatingId = 6,
                            FoodId = 6,
                            RatingId = 6
                        });
                });

            modelBuilder.Entity("FoodReview.Models.Rating", b =>
                {
                    b.Property<int>("RatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Stars")
                        .HasColumnType("int");

                    b.HasKey("RatingId");

                    b.ToTable("Rating");

                    b.HasData(
                        new
                        {
                            RatingId = 1,
                            Stars = 2
                        },
                        new
                        {
                            RatingId = 2,
                            Stars = 3
                        },
                        new
                        {
                            RatingId = 3,
                            Stars = 5
                        },
                        new
                        {
                            RatingId = 4,
                            Stars = 1
                        },
                        new
                        {
                            RatingId = 5,
                            Stars = 5
                        },
                        new
                        {
                            RatingId = 6,
                            Stars = 3
                        });
                });

            modelBuilder.Entity("FoodReview.Models.FoodRating", b =>
                {
                    b.HasOne("FoodReview.Models.Food", "Food")
                        .WithMany("JoinEntities")
                        .HasForeignKey("FoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodReview.Models.Rating", "Rating")
                        .WithMany("JoinEntities")
                        .HasForeignKey("RatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Food");

                    b.Navigation("Rating");
                });

            modelBuilder.Entity("FoodReview.Models.Food", b =>
                {
                    b.Navigation("JoinEntities");
                });

            modelBuilder.Entity("FoodReview.Models.Rating", b =>
                {
                    b.Navigation("JoinEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
